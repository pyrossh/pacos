================================================================================
type - definition
================================================================================

Cat : ToStr = {
  name: Str
  age: Int
}

Dog = {
  name: a
  age:  b
}

Dog(a: Compare + String, b) = {
  name: a
  age:  b
}
--------------------------------------------------------------------------------

(source
  (record
    (type_identifier)
    (type_identifier)
    (record_field
      (identifier)
      (type
        (type_identifier)))
    (record_field
      (identifier)
      (type
        (type_identifier))))
  (record
    (type_identifier)
    (record_field
      (identifier)
      (type
        (a)))
    (record_field
      (identifier)
      (type
        (b))))
  (record
    (type_identifier)
    (generics
      (a)
      (type_identifier)
      (type_identifier)
      (b))
    (record_field
      (identifier)
      (type
        (a)))
    (record_field
      (identifier)
      (type
        (b)))))

================================================================================
type - methods
================================================================================

Cat : ToStr = {
  name: Str
  age: Int
}

Cat\withName(name: Str) -> Cat =
  Cat(name = name, age = 0)

Cat\withAge(age: Int) -> Cat =
  Cat(name = "", age = age)

Cat\fullname() -> Str =
  "${name} ${age}"

Cat\toStr() -> Str =
  "Cat<{fullname()}, {age}>"

--------------------------------------------------------------------------------

(source
  (record
    (type_identifier)
    (type_identifier)
    (record_field
      (identifier)
      (type
        (type_identifier)))
    (record_field
      (identifier)
      (type
        (type_identifier))))
  (fn
    (method_identifier
      (type_identifier)
      (fn_identifier))
    (param
      (identifier)
      (type
        (type_identifier)))
    (return_type
      (type_identifier))
    (body
      (primary_expression
        (type_call
          (type_identifier)
          (argument_list
            (keyword_argument
              (identifier)
              (expression
                (primary_expression
                  (identifier))))
            (keyword_argument
              (identifier)
              (expression
                (primary_expression
                  (integer)))))))))
  (fn
    (method_identifier
      (type_identifier)
      (fn_identifier))
    (param
      (identifier)
      (type
        (type_identifier)))
    (return_type
      (type_identifier))
    (body
      (primary_expression
        (type_call
          (type_identifier)
          (argument_list
            (keyword_argument
              (identifier)
              (expression
                (primary_expression
                  (string
                    (string_start)
                    (string_end)))))
            (keyword_argument
              (identifier)
              (expression
                (primary_expression
                  (identifier)))))))))
  (fn
    (method_identifier
      (type_identifier)
      (fn_identifier))
    (return_type
      (type_identifier))
    (body
      (primary_expression
        (string
          (string_start)
          (string_content)
          (string_end)))))
  (fn
    (method_identifier
      (type_identifier)
      (fn_identifier))
    (return_type
      (type_identifier))
    (body
      (primary_expression
        (string
          (string_start)
          (string_content)
          (string_end))))))
