================================================================================
type - definition
================================================================================

type Cat is Stringable =
  name: Str
  age: Int

type Dog =
  name: a
  age:  b

type Dog(a: Compare + Stringable, b) is Stringable =
  name: a
  age:  b

type Int =
  add(other: Int) -> Int = this + other
  sub(other: Int) -> Int = this - other

type Cat is Stringable =
  name: Str
  age: Int

  withName(name: Str) -> Cat =
    Cat(name = name, age = 0)

  withAge(age: Int) -> Cat =
    Cat(name = "", age = age)

  Stringable() -> Str =
    "Cat"

--------------------------------------------------------------------------------

(source
  (record
    (type_identifier)
    (type_identifier)
    (record_field
      (identifier)
      (type
        (type_identifier)))
    (record_field
      (identifier)
      (type
        (type_identifier))))
  (record
    (type_identifier)
    (record_field
      (identifier)
      (type
        (a)))
    (record_field
      (identifier)
      (type
        (b))))
  (record
    (type_identifier)
    (generics
      (a)
      (type_identifier)
      (type_identifier)
      (b))
    (record_field
      (identifier)
      (type
        (a)))
    (record_field
      (identifier)
      (type
        (b))))
  (record
    (type_identifier)
    (method
      (identifier)
      (param
        (var_identier)
        (type
          (type_identifier)))
      (return_type
        (type_identifier))
      (expression
        (primary_expression
          (binary_operator
            (primary_expression
              (this))
            (primary_expression
              (identifier))))))
    (method
      (identifier)
      (param
        (var_identier)
        (type
          (type_identifier)))
      (return_type
        (type_identifier))
      (expression
        (primary_expression
          (binary_operator
            (primary_expression
              (this))
            (primary_expression
              (identifier)))))))
  (record
    (type_identifier)
    (type_identifier)
    (record_field
      (identifier)
      (type
        (type_identifier)))
    (record_field
      (identifier)
      (type
        (type_identifier)))
    (method
      (identifier)
      (param
        (var_identier)
        (type
          (type_identifier)))
      (return_type
        (type_identifier))
      (body
        (primary_expression
          (type_call
            (type_identifier)
            (argument_list
              (keyword_argument
                (identifier)
                (expression
                  (primary_expression
                    (identifier))))
              (keyword_argument
                (identifier)
                (expression
                  (primary_expression
                    (integer)))))))))
    (method
      (identifier)
      (param
        (var_identier)
        (type
          (type_identifier)))
      (return_type
        (type_identifier))
      (body
        (primary_expression
          (type_call
            (type_identifier)
            (argument_list
              (keyword_argument
                (identifier)
                (expression
                  (primary_expression
                    (string
                      (string_start)
                      (string_end)))))
              (keyword_argument
                (identifier)
                (expression
                  (primary_expression
                    (identifier)))))))))
    (method
      (identifier)
      (return_type
        (type_identifier))
      (body
        (primary_expression
          (string
            (string_start)
            (string_content)
            (string_end)))))))
