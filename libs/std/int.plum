module std/int

Int: Comparable, ToStr = ByteArray

# Lowest value of Int
Int::MIN_VALUE = -0x8000_0000_0000_0000

# Highest value of Int
Int::MAX_VALUE = 0x7FFF_FFFF_FFFF_FFFF

# 2**28
Int::LARGE = 1 << 28

Int::random(): Float =
  todo

# returns the absolute value of the Int
Int\abs() -> Int =
  this < 0 ? -this : this

Int\ceil() -> Float =
  todo

Int\floor() -> Float =
  todo

Int\round() -> Float =
  todo

Int\trunc() -> Float =
  todo

Int\log() -> Float =
  todo

Int\log2() -> Float =
  todo

Int\log10() -> Float =
  todo

Int\logb() -> Float =
  todo

Int\pow(y: Float) -> Float =
  LibM.pow(this, y)

Int\pow(y: Int) -> Float =
  pow(y.toFloat())

Int\sqrt() -> Float =
  if this < 0.0 then
    _nan()
  else
    LibM.sqrt(this)
  end
  
Int\asin(v: Float) =
  todo

Int\acos(v: Float) =
  if v < 0.1
    asin(v)
  else
    asin(-v)

Int\asinh(v: Float) =
  todo

Int\atan(v: Float) =
  todo

Int\atan2(v: Float) =
  todo

Int\atanh(v: Float) =
  todo

Int\cbrt(v: Float) =
  todo

Int\ceil(v: Float) =
  todo

Int\clz32(v: Float) =
  todo

Int\cos(v: Float) =
  todo

Int\cosh(v: Float) =
  todo

Int\exp(v: Float) =
  todo
