module std

Pair(a, b) = (
  key: a
  val: b
)

```
A Map is a data structure describing a contiguous section of an array stored separately from the slice variable itself.
A Map is not an array. A slice describes a piece of an array.
```
Map(a, b) = {
  items: List(Pair(a, b))
}

mapOf(kvs: ...Pair) -> Map =
  Map(a, b)().add(kvs)

# adds the specified elements to the start of the list
Map\add(kvs: ...Pair) =
  items.add(kvs)

# Get a value from the Map using key k
Map\get(k: a) -> b | Nil =
  for k, v in self
    if k == k
      return v
  Nil

# Put a value into the Map
Map\set(k: a, v: b) =
  items.add(pair(k, v))

# `put a value into the Map if its not already present
Map\putIfAbsent(k K, v V) =
  todo

Map\map(cb: (Pair(a, b)) -> Pair(c, d)) -> Map(c, d) =
  items.map(cb)